name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: level
          POSTGRES_DB: Level
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

      - name: Build project
        run: npm run build

      - name: Docker build
        run: docker build -t my-graphql-project .

      - name: Docker push
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag my-graphql-project ${{ secrets.DOCKER_USERNAME }}/my-graphql-project
          docker push ${{ secrets.DOCKER_USERNAME }}/my-graphql-project

      - name: Deploy to Kubernetes
        run: |
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
          kubectl set image deployment/my-graphql-project my-graphql-project=${{ secrets.DOCKER_USERNAME }}/my-graphql-project:latest
